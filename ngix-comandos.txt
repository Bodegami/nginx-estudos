# COMANDOS NGINX:

    nginx -h === help dos comandos

    nginx -s reload == carrega as novas atualizacoes

    nginx -t == verifica se o arquivo nginx.conf estÃ¡ correto.

    tail -f /usr/share/nginx/logs/load-balancer.log == fica ouvindo o arquivo e printa a qualquer atualizacao





# DICAS:



vim /etc/nginx/nginx.conf == edita o arquivo principal de configuracao. (apenas para questoes de tunning)

/usr/share/nginx/html == rota dos arquivos .conf

para devolver uma pagina especifica de erro, usamos o comando no arquivo de conf.:
error_page 404 400 401 /erro.html

echo "Servico 1" > /usr/nginx/html/index.html == cria um arquivo index.html com o a String informada.


# PROXY REVERSE

1 - Criamos um arquivo .conf
2 - indicamos a porta que ele deve escutar
3 - criamos o bloco de location correspondente
4 - adicionamos o comando proxy_pass <endpoint_a_ser_redirecionado_e_porta>
5 - Exemplo: 
        server {
            listen           8080;
            listen      [::]:8080;
            server_name localhost;
        
            location / {
                proxy_pass http://localhost:80;   
            }
        }
6 - recarregamos os arquivos de configuracao e pronto.

# CRIANDO UM LOAD BALANCER

1 - Criamos um arquivo .conf
2 - criamos um bloco chamado upstream "nome_do_load_balancer"
3 - adicionamos dentro do bloco quais o servidor(es) ele deve ouvir
4 - depois criamos um bloco server
5 - indicamos dentro do bloco o nome do servidor e a porta que ele deve ouvir.
6 - recarregamos as configuracoes do nginx
7 - exemplo: 
            upstream servicos {
                server localhost:8001;
                server localhost:8002;
            }
            server {...}

